{"version":3,"sources":["logo.svg","OTP.js","App.js","reportWebVitals.js","index.js"],"names":["OTP","isWebAPI","useState","code","setCode","useEffect","window","addEventListener","e","input","document","querySelector","ac","AbortController","form","closest","abort","navigator","credentials","get","otp","transport","signal","then","alert","submit","catch","err","console","log","type","autoComplete","inputMode","value","App","setIsWebAPI","className","src","logo","alt","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yKAAe,MAA0B,iC,eCiC1BA,MAhCf,YAAoC,IAAD,IAApBC,gBAAoB,SAC/B,EAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KA6BA,OA5BAC,qBAAU,WACFJ,GAAY,kBAAmBK,QAC/BA,OAAOC,iBAAiB,oBAAoB,SAAAC,GACxC,IAAMC,EAAQC,SAASC,cAAc,uCACrC,GAAKF,EAAL,CACA,IAAMG,EAAK,IAAIC,gBACTC,EAAOL,EAAMM,QAAQ,QACvBD,GACAA,EAAKP,iBAAiB,UAAU,SAAAC,GAC5BI,EAAGI,WAGXC,UAAUC,YACLC,IAAI,CACDC,IAAK,CAAEC,UAAW,CAAC,QACnBC,OAAQV,EAAGU,SAEdC,MAAK,SAAAH,GACFhB,EAAQgB,EAAIjB,MACZqB,MAAM,YAAaJ,EAAIjB,MACnBW,GAAMA,EAAKW,YAElBC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,YAI7B,CAAC1B,IACG,uBAAO6B,KAAK,OAAOC,aAAa,gBAAgBC,UAAU,UAAUC,MAAO9B,KCHvE+B,MAxBf,WACE,MAA8BhC,oBAAS,GAAvC,mBAAOD,EAAP,KAAiBkC,EAAjB,KACA,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sBACEH,UAAU,WACVI,QAAS,kBAAML,GAAY,IAF7B,8BAMA,sBACEC,UAAU,WACVI,QAAS,kBAAML,GAAY,IAF7B,4BAOF,cAAC,EAAD,CAAKlC,SAAUA,QCXNwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzC,SAAS0C,eAAe,SAM1BX,K","file":"static/js/main.6bdd68af.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from 'react'\r\nfunction OTP({ isWebAPI = false }) {\r\n    const [code, setCode] = useState()\r\n    useEffect(() => {\r\n        if (isWebAPI && 'OTPCredential' in window) {\r\n            window.addEventListener('DOMContentLoaded', e => {\r\n                const input = document.querySelector('input[autocomplete=\"one-time-code\"]')\r\n                if (!input) return\r\n                const ac = new AbortController()\r\n                const form = input.closest('form')\r\n                if (form) {\r\n                    form.addEventListener('submit', e => {\r\n                        ac.abort()\r\n                    })\r\n                }\r\n                navigator.credentials\r\n                    .get({\r\n                        otp: { transport: ['sms'] },\r\n                        signal: ac.signal\r\n                    })\r\n                    .then(otp => {\r\n                        setCode(otp.code)\r\n                        alert('SMS Code:', otp.code)\r\n                        if (form) form.submit()\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                    })\r\n            })\r\n        }\r\n    }, [isWebAPI])\r\n    return <input type=\"text\" autoComplete=\"one-time-code\" inputMode=\"numeric\" value={code} />\r\n}\r\nexport default OTP\r\n","import { useState } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport OTP from './OTP'\nfunction App() {\n  const [isWebAPI, setIsWebAPI]=useState(false)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <span\n          className=\"App-link\"\n          onClick={() => setIsWebAPI(false)}\n        >\n          OTP-autocomplete\n        </span>\n        <span\n          className=\"App-link\"\n          onClick={() => setIsWebAPI(true)}\n        >\n          OTP-Web API\n        </span>\n      </header>\n      <OTP isWebAPI={isWebAPI} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}